plugins {
    id 'io.jmix' version '2.3.4'
    id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.3.4'
    projectId = 'AL'
}

group = 'com.dss'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'
    implementation 'io.jmix.email:jmix-email-starter'
    implementation 'io.jmix.email:jmix-email-flowui-starter'
    implementation 'io.jmix.gridexport:jmix-gridexport-flowui-starter'
    implementation 'io.jmix.quartz:jmix-quartz-starter'
    implementation 'io.jmix.quartz:jmix-quartz-flowui-starter'
    implementation 'io.jmix.reports:jmix-reports-rest-starter'
    implementation 'io.jmix.reports:jmix-reports-starter'
    implementation 'io.jmix.reports:jmix-reports-flowui-starter'
    implementation 'io.jmix.appsettings:jmix-appsettings-flowui-starter'
    implementation 'io.jmix.appsettings:jmix-appsettings-starter'
    implementation 'io.jmix.email:jmix-email-flowui-starter'
    implementation 'io.jmix.email:jmix-email-starter'
    implementation 'org.springframework.retry:spring-retry:2.0.6'
    implementation 'io.jmix.charts:jmix-charts-flowui-starter'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation 'ch.qos.logback:logback-core:1.5.6'
    implementation 'ch.qos.logback:logback-classic:1.5.6'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch:3.2.4') {
    }

    // https://mvnrepository.com/artifact/org.opensearch.client/spring-data-opensearch-starter
    implementation('org.opensearch.client:spring-data-opensearch-starter:1.5.1') {
        exclude group: "org.opensearch.client", module: "opensearch-rest-client-sniffer"
    }

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE') {
        because "We only want the OAuth2AccessToken interface + implementations without activating Spring Security"
        exclude group: "org.springframework.security", module: "spring-security-web"
        exclude group: "org.springframework.security", module: "spring-security-config"
        exclude group: "org.springframework.security", module: "spring-security-core"
    }

}

test {
    useJUnitPlatform()
}

vaadin {
    optimizeBundle = false
}
